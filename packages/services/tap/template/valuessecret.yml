apiVersion: v1
kind: Secret
metadata:
  name: tap-packages-values
  namespace: tap-install
stringData:
  values.yml: |-
    profile: ${profile}
    ceip_policy_disclosed: true 

    # Flux excluded as TMC deploys it when enabling ContinuousDelivery
    excluded_packages:
    - fluxcd-source-controller.tanzu.vmware.com
    - cert-manager.tanzu.vmware.com

    supply_chain: testing_scanning

    shared:
      ingress_domain: ${dnsname}
      ingress_issuer: "letsencrypt-cloudflare-issuer"
      kubernetes_distribution: ""
      kubernetes_version: "1.27"
      image_registry:
        project_path: "${registry_host}/${registry_project}/build-service"
        secret:
          name: registry-credentials
          namespace: tap-install

    contour:
      envoy:
        service:
          type: LoadBalancer
          annotations: 
            external-dns.alpha.kubernetes.io/hostname: "*.${dnsname}"

    buildservice:
      kp_default_repository: "${registry_host}/${registry_project}/build-service"
      kp_default_repository_secret:
        name: registry-credentials
        namespace: tap-install
      exclude_dependencies: true    # Need to add logic to do post update of full packages if set to true
      # Added while trying to get supply chains v2 working
      enable_synced_secrets: true

    local_source_proxy:
      repository: "${registry_host}/${registry_project}/local-source"
      push_secret:
        name: lsp-registry-credentials
        namespace: tap-install
        create_export: true


    accelerator:
      ingress:
        include: true

    metadata_store:
      ns_for_export_app_cert: "*"
      app_service_type: LoadBalancer


    policy:
      tuf_enabled: false

    grype:
      targetImagePullSecret: "registry-credentials"

      
    tap_gui:
      metadataStoreAutoconfiguration: true
      #service_type: "LoadBalancer"
      #ingressEnabled: "true"
      #ingressDomain: ${dnsname}
      app_config:
      #  app:
      #    baseUrl: https://tap-gui.${dnsname}
        catalog:
          locations:
            - type: url
              target: https://github.com/davlloyd/home-tap-gitops/blob/main/catalog/surferslookout/alpha/catalog-org.yaml
      #    processors:
      #      appAccelerators:
      #        target: http://acc-server.accelerator-system.svc.cluster.local/api/accelerators
      #  reading:
      #    allow:
      #    - host: acc-server.accelerator-system.svc.cluster.local
      #  backend:
      #    baseUrl: https://tap-gui.${dnsname}
      #    cors:
      #      origin: https://tap-gui.${dnsname}
          #database:
          #  client: pg
          #  connection:
          #    host: ""
          #    port: "5432"
          #    user: ""
          #    password: ""
          #    ssl: "false"
        integrations:
          github:
            - host: github.com
              token: ${git_token}
        auth:
          allowGuestAccess: true
          environment: development
          providers:
            github:
              development:
                clientId:  ${git_clientid}
                clientSecret: ${git_clientsecret}
                prompt: auto
          loginPage:
            github:
              title: "Github Login"
              message: "Authenticate with your GitHub account"
        techdocs:
          builder: external
          generators:
            runIn: 'docker'
          publisher:
            type: awsS3
            awsS3:
              bucketName: techdocs
              bucketRootPath: '/'
              region: ${s3_region}
              credentials:
                accessKeyId: ${s3_accessid}
                secretAccessKey: ${s3_accesskey}
              endpoint: ${s3_url}
              s3ForcePathStyle: true
      #tls:
      #  namespace: default
      #  secretName: tap-cert

    cnrs:
      domain_name: "apps.${dnsname}"
      #default_tls_secret: default/tap-cert

    crossplane:
      orphan_resources: false

    namespace_provisioner:
      controller: false
      additional_sources:
      - git:
          ref: origin/main
          subPath: ns-provisioner/credentials
          url: "https://${gitops_host}/${gitops_owner}/${gitops_repo}.git"
          secretRef:
            name: git-access
            namespace: tap-install
            create_export: true
        path: _ytt_lib/ns-provisioner/credentials-setup
      - git:
          ref: origin/main
          subPath: ns-provisioner/${ns_additions}
          url: "https://${gitops_host}/${gitops_owner}/${gitops_repo}.git"
        path: _ytt_lib/ns-provisioner/additions-setup
      gitops_install:
        ref: origin/main
        subPath: ns-provisioner/provision
        url: "https://${gitops_host}/${gitops_owner}/${gitops_repo}.git"
      import_data_values_secrets:
      - name: git-auth
        namespace: tap-install
        create_export: true
      # - name: team-secret-store
      #   namespace: tap-install
      #   create_export: true
      - name: supply-chain-oci-store-credentials
        namespace: tap-install
        create_export: true
      overlay_secrets:
      - name: git-auth-overlay
        namespace: tap-install
        create_export: true
      default_parameters:
        supply_chain_service_account:
          secrets:
          - oci-store-credentials

    ootb_supply_chain_testing_scanning:
      #cluster_builder: default
      registry:
        server: ${registry_host}
        repository: "${registry_project}/supply-chain"
      gitops:
        server_address: https://${gitops_host}/
        repository_owner: ${gitops_owner}
        repository_name: ${gitops_workload_repo}
        ssh_secret: "git"
        branch: main
        commit_strategy: direct
        pull_request:
          server_kind: github
          commit_branch: ""
          pull_request_title: "ready for review"
          pull_request_body: "generated by supply chain"
      git_implementation: libgit2   # default value go-git
